class ApiFilter{
    constructor(query,querystr){
    this.query=query;
    this.querystr=querystr    
    }

    search(){
        const keyword = this.querystr.keyword ?{
            name:{
                $regex:this.querystr.keyword,
                $options:'i'
            }
        }:{}
     

        this.query = this.query.find({...keyword})
        return this
    }


    filter(){
      const queryCopy = {...this.querystr}
      
      const removeFields= ['keyword','page']
      removeFields.forEach((el)=> delete queryCopy[el])
      
      // generated by CHATGPT
         // Add logic to filter by price less than and greater than // bc in next js we have to do it manually unlike Express.js
         let output = {}
         let prop = ""

         for (let key in queryCopy) {
            if (!key.match(/\b(gt|gte|lt|lte)/)) {
              output[key] = queryCopy[key];
            } else {
              prop = key.split("[")[0];
      
              let operator = key.match(/\[(.*)\]/)[1];
      
              if (!output[prop]) {
                output[prop] = {};
              }
      
              output[prop][`$${operator}`] = queryCopy[key];
            }
          }
          // { price: { $gte: 100, $lte: 1000 } }
      
          this.query = this.query.find(output);
          return this;
        }


    pagination(resperpage){
      const currentPage = Number(this.querystr.page) || 1;
      const toskip = resperpage * (currentPage - 1) // It calculates the number of items to skip based on the current page and the number of items to display per page

      this.query =  this.query.limit(resperpage).skip(toskip);
      return this;

        }
}
export default ApiFilter